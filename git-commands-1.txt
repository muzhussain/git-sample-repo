--------------------------------------------------Git Commands--------------------------------------------------------------

git status 						 -> prints the status of the Git Repository
git init 						 -> initializes the Git Repository
git config --global user.name "muzhussain"  		 -> Specify Username globally
git config --global user.email muzhussain2018@gmail.com  -> Specify Email globally
git config user.name "muzhussain" 			 -> Specify Username for particular repository
git config user.email muzhussain2018@gmail.com 		 -> Specify Email for particular repository
git add <filename>					 -> Add <filename> to staging environment
git add *						 -> Add all files to staging environment
git commit -m "" 					 -> Commit file to local Git Repository
git log 						 -> gets the info and history of commits on the file
git diff <filename> 					 -> Check changes made to file with existing file
git remote add origin <GitHub Repository URL> 		 -> Establish connection to the remote Github Repository
git push -u origin main 				 -> Push to master branch
git branch						 -> Check which brach pointing to
git checkout -b privatebranch1				 -> Create a new branch 'privatebranch1' normally name of feature of bug number
git checkout privatebranch2				 -> Switch to branch 'privatebranch2'


git folder path:
C:\Users\pc\git-tutorial\git-sample-repo
---------------------------------------------------------------------------------------------------------------------------- 

Scenario 1:
First Release -> Done
Second Release
	2 Features
	2 People
Third Release
	1 Feature
	1 Person

Scenario 2:
Two people

Person A -> Enhance the framework
Person B -> Automating test cases

testMethod1 -> getName()

Person A -> Merge code to master
Person B -> Pull from master to private branch, merge code to master

Scenario 3:
1 Person -> Two different features
